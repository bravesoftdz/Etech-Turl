unit SuperClasses;

{*******************************************************************************
    Generated By   : JsonToDelphiClass - 0.65
    Project link   : https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
    Generated On   : 2019-03-08 13:39:22

    Created By     : Petar Georgiev - (http://pgeorgiev.com)
    Adapted Web By : Marlon Nardi - (http://jsontodelphi.com)
*******************************************************************************}

interface

uses Generics.Collections, Rest.Json;

type

TFornecedorClass = class
private
  FCnpj: String;
  FId: Extended;
  FNome: String;
public
  property cnpj: String read FCnpj write FCnpj;
  property id: Extended read FId write FId;
  property nome: String read FNome write FNome;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TFornecedorClass;
end;

TUnidadeClass = class
private
  FId: Extended;
  FNome: String;
  FUnitario: Boolean;
public
  property id: Extended read FId write FId;
  property nome: String read FNome write FNome;
  property unitario: Boolean read FUnitario write FUnitario;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TUnidadeClass;
end;

TGrupoClass = class
private
  FId: Extended;
  FNome: String;
public
  property id: Extended read FId write FId;
  property nome: String read FNome write FNome;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TGrupoClass;
end;

TProdutoClass = class
private
  FId: Extended;
  FNome: String;
public
  property id: Extended read FId write FId;
  property nome: String read FNome write FNome;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TProdutoClass;
end;

TNotasFiscaisClass = class
private
  FData: TDate;
  FFornecedor: TFornecedorClass;
  FGrupo: TGrupoClass;
  FId: Extended;
  FObservacoes: String;
  FPrecoUnitario: Extended;
  FProduto: TProdutoClass;
  FQuantidade: Extended;
  FUnidade: TUnidadeClass;
public
  property data: TDate read FData write FData;
  property fornecedor: TFornecedorClass read FFornecedor write FFornecedor;
  property grupo: TGrupoClass read FGrupo write FGrupo;
  property id: Extended read FId write FId;
  property observacoes: String read FObservacoes write FObservacoes;
  property precoUnitario: Extended read FPrecoUnitario write FPrecoUnitario;
  property produto: TProdutoClass read FProduto write FProduto;
  property quantidade: Extended read FQuantidade write FQuantidade;
  property unidade: TUnidadeClass read FUnidade write FUnidade;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TNotasFiscaisClass;
end;

TListaNFClass = class
private
  FNostaFiscal: TArray<TNotasFiscaisClass>;
public
  property Items: TArray<TNotasFiscaisClass> read FNostaFiscal write FNostaFiscal;
  constructor Create(const pLength: Integer);
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TListaNFClass;
end;

TListaNotaFiscalClass = class
  private
    FNotaFiscal: TObjectList<TNotasFiscaisClass>;
  public
    property Lista: TObjectList<TNotasFiscaisClass> read FNotaFiscal write FNotaFiscal;
    constructor Create();
    destructor Destroy(); override;
    function ToJsonString: string;
end;

implementation

{TFornecedorClass}


function TFornecedorClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TFornecedorClass.FromJsonString(AJsonString: string): TFornecedorClass;
begin
  result := TJson.JsonToObject<TFornecedorClass>(AJsonString)
end;

{TUnidadeClass}


function TUnidadeClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TUnidadeClass.FromJsonString(AJsonString: string): TUnidadeClass;
begin
  result := TJson.JsonToObject<TUnidadeClass>(AJsonString)
end;

{TGrupoClass}


function TGrupoClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TGrupoClass.FromJsonString(AJsonString: string): TGrupoClass;
begin
  result := TJson.JsonToObject<TGrupoClass>(AJsonString)
end;

{TProdutoClass}


function TProdutoClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TProdutoClass.FromJsonString(AJsonString: string): TProdutoClass;
begin
  result := TJson.JsonToObject<TProdutoClass>(AJsonString)
end;

{TNotasFiscaisClass}

constructor TNotasFiscaisClass.Create;
begin
  inherited;
  FProduto := TProdutoClass.Create();
  FGrupo := TGrupoClass.Create();
  FUnidade := TUnidadeClass.Create();
  FFornecedor := TFornecedorClass.Create();
end;

destructor TNotasFiscaisClass.Destroy;
begin
  FProduto.Free;
  FGrupo.Free;
  FUnidade.Free;
  FFornecedor.Free;
  inherited;
end;

function TNotasFiscaisClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TNotasFiscaisClass.FromJsonString(AJsonString: string): TNotasFiscaisClass;
begin
  result := TJson.JsonToObject<TNotasFiscaisClass>(AJsonString)
end;

{TListaNFClass}

constructor TListaNFClass.Create(const pLength: Integer);
begin
  SetLength(FNostaFiscal, pLength);
end;

destructor TListaNFClass.Destroy;
var
  LItemsItem: TNotasFiscaisClass;
begin
 for LItemsItem in FNostaFiscal do
   LItemsItem.Free;

  inherited;
end;

function TListaNFClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self, [joIgnoreEmptyArrays]);
end;

class function TListaNFClass.FromJsonString(AJsonString: string): TListaNFClass;
begin
  Result := TJson.JsonToObject<TListaNFClass>(AJsonString)
end;

{ TListaNotaFiscalClass }

constructor TListaNotaFiscalClass.Create;
begin
  FNotaFiscal := TObjectList<TNotasFiscaisClass>.Create;
end;

destructor TListaNotaFiscalClass.Destroy;
begin
  FNotaFiscal.Destroy;
  inherited;
end;

function TListaNotaFiscalClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(Self);
end;

end.
